---
- name: Cluster set-up (master + zeros + picluster + management)
  hosts: "master:zerocluster:picluster:management"
  become: true
  vars_files:
    - vars/cluster.yml

  roles:
    - role: installpkg
      installpkg_packages: "{{ apt_pkg }}"
    - role: raspi-expand-rootfs
      when: inventory_hostname not in (groups['zerocluster'] | default([]))
    - role: nfs_server
      when: inventory_hostname == nfs_server_host
    - role: slurmstack
      when: slurmstack_enable | default(false) | bool and (
              inventory_hostname in (groups['master'] | default([]) + groups['zerocluster'] | default([])) or
              (slurmstack_include_picluster | default(false) | bool and inventory_hostname in (groups['picluster'] | default([])))
            )
    - role: docker_runtime
      when: docker_runtime_enable | default(true) | bool and inventory_hostname in (groups['containers'] | default([]))
    - role: k3s_cluster
      when: k3s_cluster_enable | default(false) | bool and inventory_hostname in (groups['containers'] | default([]))
    - role: ssh_mesh
      when: ssh_mesh_enable | default(true) | bool

  tasks:
    - name: Create mountpoint for shared data
      ansible.builtin.file:
        path: "{{ clhat_mpnt }}"
        state: directory
        owner: root
        group: sudo
        mode: "02775"
      tags: ['nfs','mount']

    - name: Mount shared data (from NFS server {{ nfs_server_host }})
      ansible.posix.mount:
        path: /opt/data
        src: "{{ nfs_server_host }}:{{ nfs_export_path }}"
        opts: rw,sync,hard,intr
        state: mounted
        fstype: nfs
      when: inventory_hostname != nfs_server_host
      tags: ['nfs','mount']

    - name: Create alias file
      become: true
      become_user: "{{ pi_user }}"
      ansible.builtin.file:
        path: ~/.bash_aliases
        state: touch
        mode: "0644"

    - name: Set up aliases
      become: true
      become_user: "{{ pi_user }}"
      ansible.builtin.lineinfile:
        path: ~/.bash_aliases
        line: "{{ item }}"
        state: present
      loop:
        - 'alias ll="exa -Slhg --icons"'
        - 'alias la="exa -Slhga --icons"'
        - 'alias lt="exa -T --icons"'
      tags: ['shell']

  
# vim: set ft=yaml.ansible ts=4 sw=2 tw=80 et :